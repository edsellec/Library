/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.management;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import static java.lang.System.in;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edseeraan
 */
public class user_borrow extends javax.swing.JFrame {
    
    static String idLog;
    
    String USER_FILE_NAME = "C:\\Library\\Users\\"+idLog+".txt";
    
    public user_borrow() {
        initComponents();
    }

    public static void start(){
            user_borrow window = new user_borrow();
            window.setVisible(true);
            window.User_confirmBorrow.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        User_confirmBorrow = new javax.swing.JButton();
        User_goBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        User_showId = new javax.swing.JLabel();
        user_listBook = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        User_tableBook = new javax.swing.JTable();
        User_load = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        User_confirmBorrow.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 12)); // NOI18N
        User_confirmBorrow.setText("Borrow book");
        User_confirmBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_confirmBorrowActionPerformed(evt);
            }
        });

        User_goBack.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 12)); // NOI18N
        User_goBack.setText("Menu");
        User_goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_goBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 11)); // NOI18N
        jLabel2.setText("User ID:");

        User_showId.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 11)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 13)); // NOI18N
        jLabel3.setText("Book Name:");

        jLabel4.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Borrow Book Form");

        User_tableBook.setAutoCreateRowSorter(true);
        User_tableBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Title", "Book Author"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        User_tableBook.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        User_tableBook.setMaximumSize(new java.awt.Dimension(1090, 64));
        User_tableBook.setRowSelectionAllowed(false);
        User_tableBook.setShowVerticalLines(false);
        jScrollPane1.setViewportView(User_tableBook);
        if (User_tableBook.getColumnModel().getColumnCount() > 0) {
            User_tableBook.getColumnModel().getColumn(0).setResizable(false);
            User_tableBook.getColumnModel().getColumn(1).setResizable(false);
        }

        User_load.setFont(new java.awt.Font("Montserrat ExtraLight", 0, 12)); // NOI18N
        User_load.setText("Load Book Inventory");
        User_load.setSelected(true);
        User_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_loadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(User_showId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(User_goBack))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(User_confirmBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(user_listBook, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(User_load)
                .addGap(181, 181, 181))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(User_load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(user_listBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(User_confirmBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                            .addComponent(User_showId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(User_goBack)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void User_goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_goBackActionPerformed
        user_menu.start();
        user_menu.User_showId.setText(user_borrow.idLog);
        user_menu.idLog = user_borrow.idLog;
        dispose();
    }//GEN-LAST:event_User_goBackActionPerformed

    private void User_confirmBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_confirmBorrowActionPerformed
        File temp = new File("C:\\Library\\library.txt");
        Index index = new Index();
        if (temp.exists()){
            try {
                String book = user_listBook.getSelectedItem().toString();
                index.history_borrow(book, idLog);
                user_menu.start();
                user_menu.User_showId.setText(user_borrow.idLog);
                user_menu.idLog = user_borrow.idLog;
                Index text = new Index();
                try {
                    text.logHistory(idLog+" borrowed "+book);
                } catch (IOException ex) {
                    Logger.getLogger(login_admin.class.getName()).log(Level.SEVERE, null, ex);
                }
                dispose();
            } catch (IOException ex) {
                Logger.getLogger(user_borrow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            ErrorManager.catchError("Library doesn't have stored books!");
        }
    }//GEN-LAST:event_User_confirmBorrowActionPerformed

    private void User_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_loadActionPerformed
        File temp = new File("C:\\Library\\library.txt");
        if (!temp.exists()){
            ErrorManager.catchError("Library doesn't have stored books!");
        }
        else {
            try {
                readFile();
            } catch (IOException ex) {
                Logger.getLogger(user_borrow.class.getName()).log(Level.SEVERE, null, ex);
            }
            User_load.setEnabled(false);
            User_confirmBorrow.setEnabled(true);
        }
    }//GEN-LAST:event_User_loadActionPerformed

    public void readFile() throws IOException {
        File file = new File("C:\\Library\\library.txt");
        ArrayList<String> list = new ArrayList<>();
        String readLine = null;
        FileReader reader = new FileReader(file);
        BufferedReader buffReader = new BufferedReader(reader);
        while((readLine = buffReader.readLine()) != null) {
            String[] splitData = readLine.split(";");
            user_borrow.Book book = new user_borrow.Book();
            book.setName(splitData[0]);
            book.setAuthor(splitData[1]);
            DefaultTableModel model = (DefaultTableModel) User_tableBook.getModel();
            model.addRow(new String[]{book.getName(), book.getAuthor()});
            list.add(getName());
        }
        populate();
    }
    
    private void populate() {
        String[] lines;
        lines = read();
        user_listBook.removeAllItems();
        for (String str : lines) {
            user_listBook.addItem(str);
        }
    }
    
    private String[] read() {
        ArrayList<String> array = new ArrayList<>();
        try {
            FileInputStream stream = new FileInputStream("C:\\Library\\library.txt");
            BufferedReader buff = new BufferedReader(new InputStreamReader(stream));
            String readLine = null;
            while ((readLine = buff.readLine()) != null) {
                String[] splitData = readLine.split(";");
                array.add(splitData[0]);
            }
            in.close();
        }
        catch (IOException e) {
            System.err.println("Error: " + e.getMessage());
        }
        return array.toArray(new String[array.size()]);
    }
    
    class Book {

        private String name;
        private String author;

        public String getName() {
            return name;
        }
        public void setName(String name) {
            this.name = name;
        }
        public String getAuthor() {
            return author;
        }
        public void setAuthor(String author) {
            this.author = author;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton User_confirmBorrow;
    private javax.swing.JButton User_goBack;
    private javax.swing.JButton User_load;
    public static javax.swing.JLabel User_showId;
    private javax.swing.JTable User_tableBook;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> user_listBook;
    // End of variables declaration//GEN-END:variables
}
